{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { formatDate } from '@angular/common';\nexport let EditDrinkComponent = class EditDrinkComponent {\n  constructor(route, drinkService, router, locale) {\n    this.route = route;\n    this.drinkService = drinkService;\n    this.router = router;\n    this.locale = locale;\n    this.updateDrinkRequest = {\n      id: 0,\n      name: '',\n      description: '',\n      type: '',\n      dateCreated: '',\n      isActive: true\n    };\n  }\n  ngOnInit() {\n    // To grab id of the current drink record\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('id');\n        if (id) {\n          //call api\n          this.drinkService.getDrink(id).subscribe({\n            next: response => {\n              this.updateDrinkRequest = response;\n              this.updateDrinkRequest.dateCreated = formatDate(response.dateCreated, 'yyyy-MM-dd', this.locale);\n            }\n          });\n        }\n      }\n    });\n  }\n  updateDrink() {\n    this.drinkService.updateDrink(this.updateDrinkRequest.id.toString(), this.updateDrinkRequest).subscribe({\n      next: response => {\n        this.router.navigate(['drinks']);\n      }\n    });\n  }\n  deleteDrink() {\n    // Delete the drink, close the modal and redirect to the drink list page.\n    this.drinkService.deleteDrink(this.updateDrinkRequest.id.toString()).subscribe({\n      next: response => {\n        document.getElementById(\"closeBtn\")?.click();\n        this.router.navigate(['drinks']);\n      }\n    });\n  }\n};\nEditDrinkComponent = __decorate([Component({\n  selector: 'app-edit-drink',\n  templateUrl: './edit-drink.component.html',\n  styleUrls: ['./edit-drink.component.css']\n}), __param(3, Inject(LOCALE_ID))], EditDrinkComponent);","map":{"version":3,"names":["Component","formatDate","EditDrinkComponent","constructor","route","drinkService","router","locale","updateDrinkRequest","id","name","description","type","dateCreated","isActive","ngOnInit","paramMap","subscribe","next","params","get","getDrink","response","updateDrink","toString","navigate","deleteDrink","document","getElementById","click","__decorate","selector","templateUrl","styleUrls","__param","Inject","LOCALE_ID"],"sources":["C:\\Users\\Jei Yang\\source\\repos\\HomeCafe\\angularapp\\src\\app\\components\\drinks\\edit-drink\\edit-drink.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DrinkService } from '../../../services/drink.service';\r\nimport { Drink } from '../../../models/drink.model';\r\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-edit-drink',\n  templateUrl: './edit-drink.component.html',\n  styleUrls: ['./edit-drink.component.css']\n})\nexport class EditDrinkComponent implements OnInit {\n\n  updateDrinkRequest: Drink = {\n    id: 0,\n    name: '',\n    description: '',\n    type: '',\n    dateCreated: '',\n    isActive: true\n  };\n\n  constructor(private route: ActivatedRoute, private drinkService: DrinkService, private router: Router, @Inject(LOCALE_ID) private locale: string) { }\n\n  ngOnInit(): void {\n    // To grab id of the current drink record\n    this.route.paramMap.subscribe({\n      next: (params) => {\n        const id = params.get('id');\n\n        if (id) {\n          //call api\n          this.drinkService.getDrink(id)\n            .subscribe({\n              next: (response) => {\n                this.updateDrinkRequest = response;\n                this.updateDrinkRequest.dateCreated = formatDate(response.dateCreated, 'yyyy-MM-dd', this.locale);\n              }\n            });\n        }\n\n      }\n    });\n  }\n\n  updateDrink() {\n    this.drinkService.updateDrink(this.updateDrinkRequest.id.toString(), this.updateDrinkRequest)\n      .subscribe({\n        next: (response) => {\n          this.router.navigate(['drinks']);\n        }\n      });\n  }\n\n  deleteDrink() {\n    // Delete the drink, close the modal and redirect to the drink list page.\n    this.drinkService.deleteDrink(this.updateDrinkRequest.id.toString())\n      .subscribe({\n        next: (response) => {\n          document.getElementById(\"closeBtn\")?.click();\n          this.router.navigate(['drinks']);\n        }\n      });\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,UAAU,QAAQ,iBAAiB;AAOrC,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAW7BC,YAAoBC,KAAqB,EAAUC,YAA0B,EAAUC,MAAc,EAAqBC,MAAsB;IAA5H,KAAAH,KAAK,GAALA,KAAK;IAA0B,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAAqC,KAAAC,MAAM,GAANA,MAAM;IATxI,KAAAC,kBAAkB,GAAU;MAC1BC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE;KACX;EAEmJ;EAEpJC,QAAQA,CAAA;IACN;IACA,IAAI,CAACX,KAAK,CAACY,QAAQ,CAACC,SAAS,CAAC;MAC5BC,IAAI,EAAGC,MAAM,IAAI;QACf,MAAMV,EAAE,GAAGU,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;QAE3B,IAAIX,EAAE,EAAE;UACN;UACA,IAAI,CAACJ,YAAY,CAACgB,QAAQ,CAACZ,EAAE,CAAC,CAC3BQ,SAAS,CAAC;YACTC,IAAI,EAAGI,QAAQ,IAAI;cACjB,IAAI,CAACd,kBAAkB,GAAGc,QAAQ;cAClC,IAAI,CAACd,kBAAkB,CAACK,WAAW,GAAGZ,UAAU,CAACqB,QAAQ,CAACT,WAAW,EAAE,YAAY,EAAE,IAAI,CAACN,MAAM,CAAC;YACnG;WACD,CAAC;;MAGR;KACD,CAAC;EACJ;EAEAgB,WAAWA,CAAA;IACT,IAAI,CAAClB,YAAY,CAACkB,WAAW,CAAC,IAAI,CAACf,kBAAkB,CAACC,EAAE,CAACe,QAAQ,EAAE,EAAE,IAAI,CAAChB,kBAAkB,CAAC,CAC1FS,SAAS,CAAC;MACTC,IAAI,EAAGI,QAAQ,IAAI;QACjB,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC;KACD,CAAC;EACN;EAEAC,WAAWA,CAAA;IACT;IACA,IAAI,CAACrB,YAAY,CAACqB,WAAW,CAAC,IAAI,CAAClB,kBAAkB,CAACC,EAAE,CAACe,QAAQ,EAAE,CAAC,CACjEP,SAAS,CAAC;MACTC,IAAI,EAAGI,QAAQ,IAAI;QACjBK,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,EAAEC,KAAK,EAAE;QAC5C,IAAI,CAACvB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC;KACD,CAAC;EACN;CAED;AAtDYvB,kBAAkB,GAAA4B,UAAA,EAL9B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,EAYwGC,OAAA,IAAAC,MAAM,CAACC,SAAS,CAAC,E,EAX9GlC,kBAAkB,CAsD9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}