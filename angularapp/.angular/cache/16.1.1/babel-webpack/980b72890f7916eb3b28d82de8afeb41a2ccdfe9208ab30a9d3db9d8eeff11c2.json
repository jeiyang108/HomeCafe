{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DrinkService {\n  constructor(http) {\n    this.http = http;\n    this.baseApiUrl = environment.baseApiUrl;\n  }\n  getAllDrinks() {\n    return this.http.get(this.baseApiUrl + '/api/drinks');\n  }\n  addDrink(addDrinkRequest) {\n    return this.http.post(this.baseApiUrl + '/api/drinks', addDrinkRequest);\n  }\n  getDrink(id) {\n    return this.http.get(this.baseApiUrl + '/api/drinks/' + id);\n  }\n  updateDrink(id, updateDrinkRequest) {\n    return this.http.put(this.baseApiUrl + '/api/drinks/' + id, updateDrinkRequest);\n  }\n  updateDrinkPhoto(id, formData) {\n    return this.http.put(this.baseApiUrl + '/api/drinks/photo/' + id, formData);\n  }\n  deleteDrink(id) {\n    return this.http.delete(this.baseApiUrl + '/api/drinks/' + id);\n  }\n}\nDrinkService.ɵfac = function DrinkService_Factory(t) {\n  return new (t || DrinkService)(i0.ɵɵinject(i1.HttpClient));\n};\nDrinkService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DrinkService,\n  factory: DrinkService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","DrinkService","constructor","http","baseApiUrl","getAllDrinks","get","addDrink","addDrinkRequest","post","getDrink","id","updateDrink","updateDrinkRequest","put","updateDrinkPhoto","formData","deleteDrink","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Jei Yang\\source\\repos\\HomeCafe\\angularapp\\src\\app\\services\\drink.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Drink } from '../models/drink.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DrinkService {\r\n\r\n  baseApiUrl: string = environment.baseApiUrl;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllDrinks(): Observable<Drink[]> {\r\n    return this.http.get<Drink[]>(this.baseApiUrl + '/api/drinks');\r\n  }\r\n\r\n  addDrink(addDrinkRequest: Drink): Observable<Drink> {\r\n    return this.http.post<Drink>(this.baseApiUrl + '/api/drinks', addDrinkRequest);\r\n  }\r\n\r\n  getDrink(id: string): Observable<Drink> {\r\n    return this.http.get<Drink>(this.baseApiUrl + '/api/drinks/' + id);\r\n  }\r\n\r\n  updateDrink(id: string, updateDrinkRequest: Drink): Observable<Drink> {\r\n    return this.http.put<Drink>(this.baseApiUrl + '/api/drinks/' + id, updateDrinkRequest);\r\n  }\r\n\r\n  updateDrinkPhoto(id: string, formData: FormData): Observable<Drink> {\r\n    return this.http.put<Drink>(this.baseApiUrl + '/api/drinks/photo/' + id, formData);\r\n  }\r\n\r\n  deleteDrink(id: string): Observable<Drink> {\r\n    return this.http.delete<Drink>(this.baseApiUrl + '/api/drinks/' + id);\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,gCAAgC;;;AAO5D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,UAAU,GAAWJ,WAAW,CAACI,UAAU;EACH;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,UAAU,GAAG,aAAa,CAAC;EAChE;EAEAG,QAAQA,CAACC,eAAsB;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAQ,IAAI,CAACL,UAAU,GAAG,aAAa,EAAEI,eAAe,CAAC;EAChF;EAEAE,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,UAAU,GAAG,cAAc,GAAGO,EAAE,CAAC;EACpE;EAEAC,WAAWA,CAACD,EAAU,EAAEE,kBAAyB;IAC/C,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAQ,IAAI,CAACV,UAAU,GAAG,cAAc,GAAGO,EAAE,EAAEE,kBAAkB,CAAC;EACxF;EAEAE,gBAAgBA,CAACJ,EAAU,EAAEK,QAAkB;IAC7C,OAAO,IAAI,CAACb,IAAI,CAACW,GAAG,CAAQ,IAAI,CAACV,UAAU,GAAG,oBAAoB,GAAGO,EAAE,EAAEK,QAAQ,CAAC;EACpF;EAEAC,WAAWA,CAACN,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACe,MAAM,CAAQ,IAAI,CAACd,UAAU,GAAG,cAAc,GAAGO,EAAE,CAAC;EACvE;;AA3BWV,YAAY,C;mBAAZA,YAAY,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZrB,YAAY,C;SAAZA,YAAY;EAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}