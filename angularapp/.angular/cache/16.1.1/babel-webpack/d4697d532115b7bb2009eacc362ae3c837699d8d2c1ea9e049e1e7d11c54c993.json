{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nexport let EditDrinkComponent = class EditDrinkComponent {\n  constructor(route, drinkService, router, datePipe) {\n    this.route = route;\n    this.drinkService = drinkService;\n    this.router = router;\n    this.datePipe = datePipe;\n    this.updateDrinkRequest = {\n      id: 0,\n      name: '',\n      description: '',\n      dateCreated: new Date(),\n      formattedDateCreated: '',\n      isActive: true,\n      image: \"\" //new ArrayBuffer(8)\n    };\n  }\n\n  ngOnInit() {\n    // To grab id of the current drink record\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('id');\n        if (id) {\n          //call api\n          this.drinkService.getDrink(id).subscribe({\n            next: response => {\n              this.updateDrinkRequest = response;\n              this.updateDrinkRequest.formattedDateCreated = this.datePipe.transform(response.dateCreated, 'MMMM d, y h:mm a');\n            }\n          });\n        }\n      }\n    });\n  }\n  updateDrink() {\n    this.drinkService.updateDrink(this.updateDrinkRequest.id.toString(), this.updateDrinkRequest).subscribe({\n      next: response => {\n        this.router.navigate(['drinks']);\n      }\n    });\n  }\n  deleteDrink() {\n    // Delete the drink, close the modal and redirect to the drink list page.\n    this.drinkService.deleteDrink(this.updateDrinkRequest.id.toString()).subscribe({\n      next: response => {\n        document.getElementById(\"closeBtn\")?.click();\n        this.router.navigate(['drinks']);\n      }\n    });\n  }\n};\nEditDrinkComponent = __decorate([Component({\n  selector: 'app-edit-drink',\n  templateUrl: './edit-drink.component.html',\n  styleUrls: ['./edit-drink.component.css'],\n  providers: [DatePipe]\n})], EditDrinkComponent);","map":{"version":3,"names":["Component","DatePipe","EditDrinkComponent","constructor","route","drinkService","router","datePipe","updateDrinkRequest","id","name","description","dateCreated","Date","formattedDateCreated","isActive","image","ngOnInit","paramMap","subscribe","next","params","get","getDrink","response","transform","updateDrink","toString","navigate","deleteDrink","document","getElementById","click","__decorate","selector","templateUrl","styleUrls","providers"],"sources":["C:\\Users\\Jei Yang\\source\\repos\\HomeCafe\\angularapp\\src\\app\\components\\drinks\\edit-drink\\edit-drink.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DrinkService } from '../../../services/drink.service';\nimport { Drink } from '../../../models/drink.model';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-edit-drink',\n  templateUrl: './edit-drink.component.html',\n  styleUrls: ['./edit-drink.component.css'],\n  providers: [DatePipe]\n})\nexport class EditDrinkComponent implements OnInit {\n\n  updateDrinkRequest: Drink = {\n    id: 0,\n    name: '',\n    description: '',\n    dateCreated: new Date(),\n    formattedDateCreated: '',\n    isActive: true,\n    image: \"\" //new ArrayBuffer(8)\n  };\n\n  constructor(private route: ActivatedRoute, private drinkService: DrinkService, private router: Router, private datePipe: DatePipe) { }\n\n  ngOnInit(): void {\n    // To grab id of the current drink record\n    this.route.paramMap.subscribe({\n      next: (params) => {\n        const id = params.get('id');\n\n        if (id) {\n          //call api\n          this.drinkService.getDrink(id)\n            .subscribe({\n              next: (response) => {\n                this.updateDrinkRequest = response;\n                this.updateDrinkRequest.formattedDateCreated = this.datePipe.transform(response.dateCreated, 'MMMM d, y h:mm a');\n              }\n            });\n        }\n\n      }\n    });\n  }\n\n  updateDrink() {\n    this.drinkService.updateDrink(this.updateDrinkRequest.id.toString(), this.updateDrinkRequest)\n      .subscribe({\n        next: (response) => {\n          this.router.navigate(['drinks']);\n        }\n      });\n  }\n\n  deleteDrink() {\n    // Delete the drink, close the modal and redirect to the drink list page.\n    this.drinkService.deleteDrink(this.updateDrinkRequest.id.toString())\n      .subscribe({\n        next: (response) => {\n          document.getElementById(\"closeBtn\")?.click();\n          this.router.navigate(['drinks']);\n        }\n      });\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,QAAQ,QAAQ,iBAAiB;AAQnC,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAY7BC,YAAoBC,KAAqB,EAAUC,YAA0B,EAAUC,MAAc,EAAUC,QAAkB;IAA7G,KAAAH,KAAK,GAALA,KAAK;IAA0B,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,QAAQ,GAARA,QAAQ;IAVvH,KAAAC,kBAAkB,GAAU;MAC1BC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,oBAAoB,EAAE,EAAE;MACxBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,EAAE,CAAC;KACX;EAEoI;;EAErIC,QAAQA,CAAA;IACN;IACA,IAAI,CAACb,KAAK,CAACc,QAAQ,CAACC,SAAS,CAAC;MAC5BC,IAAI,EAAGC,MAAM,IAAI;QACf,MAAMZ,EAAE,GAAGY,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;QAE3B,IAAIb,EAAE,EAAE;UACN;UACA,IAAI,CAACJ,YAAY,CAACkB,QAAQ,CAACd,EAAE,CAAC,CAC3BU,SAAS,CAAC;YACTC,IAAI,EAAGI,QAAQ,IAAI;cACjB,IAAI,CAAChB,kBAAkB,GAAGgB,QAAQ;cAClC,IAAI,CAAChB,kBAAkB,CAACM,oBAAoB,GAAG,IAAI,CAACP,QAAQ,CAACkB,SAAS,CAACD,QAAQ,CAACZ,WAAW,EAAE,kBAAkB,CAAC;YAClH;WACD,CAAC;;MAGR;KACD,CAAC;EACJ;EAEAc,WAAWA,CAAA;IACT,IAAI,CAACrB,YAAY,CAACqB,WAAW,CAAC,IAAI,CAAClB,kBAAkB,CAACC,EAAE,CAACkB,QAAQ,EAAE,EAAE,IAAI,CAACnB,kBAAkB,CAAC,CAC1FW,SAAS,CAAC;MACTC,IAAI,EAAGI,QAAQ,IAAI;QACjB,IAAI,CAAClB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC;KACD,CAAC;EACN;EAEAC,WAAWA,CAAA;IACT;IACA,IAAI,CAACxB,YAAY,CAACwB,WAAW,CAAC,IAAI,CAACrB,kBAAkB,CAACC,EAAE,CAACkB,QAAQ,EAAE,CAAC,CACjER,SAAS,CAAC;MACTC,IAAI,EAAGI,QAAQ,IAAI;QACjBM,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,EAAEC,KAAK,EAAE;QAC5C,IAAI,CAAC1B,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC;KACD,CAAC;EACN;CAED;AAvDY1B,kBAAkB,GAAA+B,UAAA,EAN9BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B,CAAC;EACzCC,SAAS,EAAE,CAACpC,QAAQ;CACrB,CAAC,C,EACWC,kBAAkB,CAuD9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}